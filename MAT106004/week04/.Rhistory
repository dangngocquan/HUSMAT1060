compare <- "The mean price of the car is equal to Edmund's estimate.",
ifelse(meanPr > estimateEdmund,
compare <- "The mean price of the car is greater than Edmund's estimate.",
compare <- "The mean price of the car is less than Edmund's estimate."
)
)
compare = ""
ifelse(meanPr == estimateEdmund,
compare <- "The mean price of the car is equal to Edmund's estimate.",
ifelse(meanPr > estimateEdmund,
compare <- "The mean price of the car is greater than Edmund's estimate.",
compare <- "The mean price of the car is less than Edmund's estimate."
)
)
compare <- ""
ifelse(meanPr == estimateEdmund,
compare <- "The mean price of the car is equal to Edmund's estimate.",
ifelse(meanPr > estimateEdmund,
compare <- "The mean price of the car is greater than Edmund's estimate.",
compare <- "The mean price of the car is less than Edmund's estimate."
)
)
# Exercise 01
# a)
pr = c(9000, 9500, 9400, 10000, 9500, 10300, 10200)
# b)
meanPr = mean(pr)
estimateEdmund = 9500
compare <- ""
ifelse(meanPr == estimateEdmund,
compare <- "The mean price of the car is equal to Edmund's estimate.",
ifelse(meanPr > estimateEdmund,
compare <- "The mean price of the car is greater than Edmund's estimate.",
compare <- "The mean price of the car is less than Edmund's estimate."
)
)
# c)
count(pr, 9500)
# Exercise 01
# a)
pr = c(9000, 9500, 9400, 10000, 9500, 10300, 10200)
# b)
meanPr = mean(pr)
estimateEdmund = 9500
compare <- ""
ifelse(meanPr == estimateEdmund,
compare <- "The mean price of the car is equal to Edmund's estimate.",
ifelse(meanPr > estimateEdmund,
compare <- "The mean price of the car is greater than Edmund's estimate.",
compare <- "The mean price of the car is less than Edmund's estimate."
)
)
# c)
# c)
pr > estimateEdmund
# c)
length(which(pr > estimateEdmund))
A = matrix(data = c(1, 5, 3, -1), ncol = 2)
A
B = matrix(data = c(7, 3, 3, 7), ncol = 2)
B
C = B %*% solve(A)
C
A %*% C
C = B %/% solve(A)
C
A %*% C
C = B %/% A
C
A %*% C
C = matrix(dÃ¢t = c(1, 2, 3/2, 1/2), ncol = 2)
C = matrix(data = c(1, 2, 3/2, 1/2), ncol = 2)
C
C %*% A
A %*% C
C = solve(A) %*% B
C
# a)
minuteOfDay = c(17, 16, 20, 24, 22, 15, 21, 15, 17, 22)
min(minuteOfDay)
mean(minuteOfDay)
max(minuteOfDay)
# b)
replace(minuteOfDay, minuteOfDay == 24, 18)
minuteOfDay
# c)
greaterThan17 = length(which(minuteOfDay > 17))
greaterThan17
# c)
greaterThan20 = length(which(minuteOfDay > 20))
greaterThan20
lessThanOrEqual17 = length(which(minuteOfDay <= 17))
lessThanOrEqual17
lessThanOrEqual17Percent = lessThanOrEqual17 / length(minuteOfDay) * 100
lessThanOrEqual17Percent
print(lessThanOrEqual17Percent, "%")
print(lessThanOrEqual17Percent +  "%")
lessThanOrEqual17Percent
# Exercise 03
# a)
minuteOfDay = c(17, 16, 20, 24, 22, 15, 21, 15, 17, 22)
min(minuteOfDay)
mean(minuteOfDay)
max(minuteOfDay)
# b)
replace(minuteOfDay, minuteOfDay == 24, 18)
# c)
greaterThan20 = length(which(minuteOfDay > 20))
greaterThan20
lessThanOrEqual17 = length(which(minuteOfDay <= 17))
lessThanOrEqual17Percent = lessThanOrEqual17 / length(minuteOfDay) * 100
lessThanOrEqual17Percent
# a)
bill = c(46, 33, 39, 37, 46, 30, 48, 32, 49, 35, 30, 48)
bill
sum(bill)
# b)
greaterThan40 = length(which(bill > 40))
greaterThan40
percentGreaterThan40 = greaterThan40 / length(bill)
percentGreaterThan40
percentGreaterThan40 = greaterThan40 / length(bill) * 100
percentGreaterThan40
percentLessThanOrEqual17 = lessThanOrEqual17 / length(minuteOfDay) * 100
percentLessThanOrEqual17
# Exercise 03
# a)
minuteOfDay = c(17, 16, 20, 24, 22, 15, 21, 15, 17, 22)
min(minuteOfDay)
mean(minuteOfDay)
max(minuteOfDay)
# b)
replace(minuteOfDay, minuteOfDay == 24, 18)
# c)
greaterThan20 = length(which(minuteOfDay > 20))
greaterThan20
lessThanOrEqual17 = length(which(minuteOfDay <= 17))
percentLessThanOrEqual17 = lessThanOrEqual17 / length(minuteOfDay) * 100
percentLessThanOrEqual17
age <- c(1, 2, 3, 4, 5)
issulin <- c(1.2, 2.3, 3.4, 4.5, 5.6)
isulin <- c(1.2, 2.3, 3.4, 4.5, 5.6)
data <- data.frame(age, insulin)
insulin <- c(1.2, 2.3, 3.4, 4.5, 5.6)
data <- data.frame(age, insulin)
data
data2 <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week05\\testFile.csv",
header = TRUE)
data2
data2 <- read.csv("D://Study\\R\\HUSMAT1060\\MAT106005\\week05\\testFile.csv",
header = TRUE)
data2
data2 <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week05\\testFile.csv",
header = TRUE)
data2
age <- c(1, 2, 3, 4, 5)
insulin <- c(1.2, 2.3, 3.4, 4.5, 5.6)
data <- data.frame(age, insulin)
data
data2 <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week05\\testFile.csv",
header = TRUE)
data2
cars
install.packages("MASS")
??MASS
help(pakages = "MASS")
help(packages="MASS")
help(package="MASS")
mtcars
data3 <- mtcars
data3
data3$am[which(data3$am == 1)] <- "A"
data3
data3$am[which(data3$am == 0)] <- "B"
data3
data3 <- mtcars
data3
data3$trans <- factor(data3$am, levels = c(0, 1),
labels = c("Automatic", "Manual"))
data3
View(data3)
c1 <- c(1, 2, 3, 4, 5)
c2 <- c(11, 22, 33, 44, 55)
df <- data.frame(c1, c2)
df
df$c3 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("--2", "2-4", "4--"))
df
df$c3 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("--2", "2-4", "4--"),include.lowest = TRUE)
df
df$c3 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("--2", "2-4", "4--"),include.lowest = FALSE)
df
c1 <- c(1, 2, 3, 4, 5)
df <- data.frame(c1)
df$c2 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("--2", "2-4", "4--"),include.lowest = FALSE)
df
df$c2 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("--2", "2-4", "4--"),right = FALSE)
df
df$c2 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("[,2)", "[2,4)", "[4,0"),right = FALSE)
df
df$c2 <- cut(df$c1, breaks = c(-Inf, 2, 4, Inf), labels = c("[,2)", "[2,4)", "[4,0)"),right = FALSE)
df
# Exercise 01
ercise 01
# Exercise 01
# a)
studentId = sample(1:2345, size=2345, replace = FALSE)
studentId
# Exercise 01
options(max.print = .Machine$integer.max)
# a)
studentId = sample(1:2345, size=2345, replace = FALSE)
studentId
regularGrade = sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
regularGrade
midTermGrade = sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade
lastTermGrade = sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade
grades <- data.frame(studentId, regularGrade, midTermGrade, lastTermGrade)
grades
grades <- data.frame(studentId, regularGrade, midTermGrade, lastTermGrade)
grades
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# Exercise 01
options(max.print = .Machine$integer.max)
# a)
studentID <- sample(x = 1000:2345, size = 234, replace = FALSE)
regularGrades <- sample(x = seq(0, 10, 0.1), size = 234, replace = TRUE)
midTermGrades <- sample(x = seq(0, 10, 0.1), size = 234, replace = TRUE)
lastTermGrades <- sample(x = seq(0, 10, 0.1), size = 234, replace = TRUE)
scores <- data.frame(studentID = studentID,
regularGrades = regularGrades,
midTermGrades = midTermGrades,
lastTermGrades = lastTermGrades)
scores
# b)
averageGrades <- 0.2*regularGrades + 0.2*midTermGrades + 0.6*lastTermGrades
scores$averageGrades <- averageGrades
scores
# c)
scores$letterGrades <- cut(scores$averageGrades,
breaks = c(0, 3.9999, 4.9999, 5.4999, 6.4999, 6.9999,
7.9999, 8.4999, 8.9999, 10.0001),
labels = c("F", "D", "D+", "C", "C+", "B", "B+", "A",
"A+"))
scores
View(grades)
# Exercise 01
options(max.print = .Machine$integer.max)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# b)
View(grades)
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
grades
# Exercise 01
options(max.print = .Machine$integer.max)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
grades
# c)
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'))
grades
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
grades
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv")
dat
View(dat)
# a)
dat1 <- subset(dat, dat$City == "Boston")
dat1
# b)
# b)
dat2 <- subset(dat, dat$Product == 'Carrot')
dat2
sum(dat2$TotalPrice)
# c)
dat3 <- subset(dat1, dat1$Product == 'Carrot')
dat3
mean(dat3$)
mean(dat3$Quantity)
# Exercise 02
setwd("D:\\Study\\R\\HUSMAT1060\\MAT106004\\week04")
dat <- read.csv("Product.csv", header = TRUE)
dat
# a)
dat1 <- subset(dat, dat$City == "Boston")
dat1
# b)
dat2 <- subset(dat, dat$Product == "Carrot")
dat2
totalPriceOfCarrot = sum(dat2$TotalPrice)
totalPriceOfCarrot
# c)
dat3 <- subset(dat, dat$City == "Boston" & dat$Product == "Carrot")
dat3
averageNumbersOfCarrot = mean(dat3$Quantity)
averageNumbersOfCarrot
# Exercise 01
options(max.print = .Machine$integer.max)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
grades
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
grades
View(grades)
# Exercise 01
options(max.print = 10000)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
grades
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
grades
# Exercise 01
options(max.print = 50000)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
grades
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
grades
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
grades
View(grades)
# Exercise 01
options(max.print = 50000)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
# Exercise 01
options(max.print = 50000)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
# Exercise 01
options(max.print = 50000)
# a)
studentID <- sample(1:2345, size=2345, replace = FALSE)
regularGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
midTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
lastTermGrade <- sample(seq(0, 10, 0.25), size=2345, replace = TRUE)
grades <- data.frame(studentID = studentID,
regularGrade = regularGrade,
midTermGrade = midTermGrade,
lastTermGrade = lastTermGrade)
# b)
grades$averageGrade <- (0.2*grades$regularGrade + 0.2*grades$midTermGrade
+ 0.6*grades$lastTermGrade)
# c)
grades$alphaGrade <- cut(grades$averageGrade,
breaks = c(-Inf, 4, 5, 5.5, 6.5, 7, 7.5, 8.5, 9, Inf),
labels = c('F', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+'),
right = FALSE)
# Exercise 02
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv")
# a)
dat1 <- subset(dat, dat$City == "Boston")
# b)
dat2 <- subset(dat, dat$Product == 'Carrot')
sum(dat2$TotalPrice)
# c)
dat3 <- subset(dat1, dat1$Product == 'Carrot')
mean(dat3$Quantity)
View(dat)
View(dat1)
View(dat2)
View(dat3)
dat
# Exercise 02
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv")
# a)
dat1 <- subset(dat, dat$City == "Boston")
# b)
dat2 <- subset(dat, dat$Product == 'Carrot')
sum(dat2$TotalPrice)
# c)
dat3 <- subset(dat1, dat1$Product == 'Carrot')
mean(dat3$Quantity)
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv",
header = TRUE)
unique(dat1)
# Exercise 02
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv",
header = TRUE)
# a)
dat1 <- subset(dat, dat$City == "Boston")
# b)
dat2 <- subset(dat, dat$Product == 'Carrot')
sum(dat2$TotalPrice)
# c)
dat3 <- subset(dat1, dat1$Product == 'Carrot')
mean(dat3$Quantity)
# Exercise 02
dat <- read.csv("D:\\Study\\R\\HUSMAT1060\\MAT106005\\week06\\Product.csv",
header = TRUE)
# a)
dat1 <- subset(dat, dat$City == "Boston")
# b)
dat2 <- subset(dat, dat$Product == 'Carrot')
sum(dat2$TotalPrice)
# c)
dat3 <- subset(dat1, dat1$Product == 'Carrot')
mean(dat3$Quantity)
dat4 <- subset(dat, dat$City == 'Boston' & dat$Product == 'Carrot')
mean(dat4$Quantity)
